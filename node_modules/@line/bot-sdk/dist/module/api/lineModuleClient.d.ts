/**
 * LINE Messaging API
 * This document describes LINE Messaging API.
 *
 * The version of the OpenAPI document: 0.0.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { AcquireChatControlRequest } from "../model/acquireChatControlRequest";
import { DetachModuleRequest } from "../model/detachModuleRequest";
import { GetModulesResponse } from "../model/getModulesResponse";
import * as Types from "../../types";
interface httpClientConfig {
    baseURL?: string;
    channelAccessToken: string;
}
export declare class LineModuleClient {
    private httpClient;
    constructor(config: httpClientConfig);
    private parseHTTPResponse;
    /**
     * If the Standby Channel wants to take the initiative (Chat Control), it calls the Acquire Control API. The channel that was previously an Active Channel will automatically switch to a Standby Channel.
     * @param chatId The `userId`, `roomId`, or `groupId`
     * @param acquireChatControlRequest
     *
     * @see <a href="https://developers.line.biz/en/reference/partner-docs/#acquire-control-api"> Documentation</a>
     */
    acquireChatControl(chatId: string, acquireChatControlRequest?: AcquireChatControlRequest): Promise<Types.MessageAPIResponseBase>;
    /**
     * The module channel admin calls the Detach API to detach the module channel from a LINE Official Account.
     * @param detachModuleRequest
     *
     * @see <a href="https://developers.line.biz/en/reference/partner-docs/#unlink-detach-module-channel-by-operation-mc-admin"> Documentation</a>
     */
    detachModule(detachModuleRequest?: DetachModuleRequest): Promise<Types.MessageAPIResponseBase>;
    /**
     * Gets a list of basic information about the bots of multiple LINE Official Accounts that have attached module channels.
     * @param start Value of the continuation token found in the next property of the JSON object returned in the response. If you can\'t get all basic information about the bots in one request, include this parameter to get the remaining array.
     * @param limit Specify the maximum number of bots that you get basic information from. The default value is 100. Max value: 100
     *
     * @see <a href="https://developers.line.biz/en/reference/partner-docs/#get-multiple-bot-info-api"> Documentation</a>
     */
    getModules(start?: string, limit?: number): Promise<GetModulesResponse>;
    /**
     * To return the initiative (Chat Control) of Active Channel to Primary Channel, call the Release Control API.
     * @param chatId The `userId`, `roomId`, or `groupId`
     *
     * @see <a href="https://developers.line.biz/en/reference/partner-docs/#release-control-api"> Documentation</a>
     */
    releaseChatControl(chatId: string): Promise<Types.MessageAPIResponseBase>;
}
export {};
