"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const api_1 = require("../../api");
const nock = require("nock");
const assert_1 = require("assert");
const pkg = require("../../../../package.json");
const channel_access_token = "test_channel_access_token";
describe("LineModuleClient", () => {
    before(() => nock.disableNetConnect());
    afterEach(() => nock.cleanAll());
    after(() => nock.enableNetConnect());
    const client = new api_1.LineModuleClient({
        channelAccessToken: channel_access_token,
    });
    it("acquireChatControl", async () => {
        const scope = nock("https://api.line.me", {
            reqheaders: {
                Authorization: `Bearer ${channel_access_token}`,
                "User-Agent": `${pkg.name}/${pkg.version}`,
            },
        })
            .post(u => u.includes("/v2/bot/chat/{chatId}/control/acquire".replace("{chatId}", "DUMMY")))
            .reply(200, {});
        const res = await client.acquireChatControl(
        // chatId: string
        "DUMMY", // chatId(string)
        // acquireChatControlRequest: AcquireChatControlRequest
        {});
        (0, assert_1.equal)(scope.isDone(), true);
    });
    it("detachModule", async () => {
        const scope = nock("https://api.line.me", {
            reqheaders: {
                Authorization: `Bearer ${channel_access_token}`,
                "User-Agent": `${pkg.name}/${pkg.version}`,
            },
        })
            .post(u => u.includes("/v2/bot/channel/detach"))
            .reply(200, {});
        const res = await client.detachModule(
        // detachModuleRequest: DetachModuleRequest
        {});
        (0, assert_1.equal)(scope.isDone(), true);
    });
    it("getModules", async () => {
        const scope = nock("https://api.line.me", {
            reqheaders: {
                Authorization: `Bearer ${channel_access_token}`,
                "User-Agent": `${pkg.name}/${pkg.version}`,
            },
        })
            .get(u => u.includes("/v2/bot/list"
            .replace("{start}", "DUMMY") // string
            .replace("{limit}", "0")))
            .reply(200, {});
        const res = await client.getModules(
        // start: string
        "DUMMY", // paramName=start(enum)
        // limit: number
        "DUMMY");
        (0, assert_1.equal)(scope.isDone(), true);
    });
    it("releaseChatControl", async () => {
        const scope = nock("https://api.line.me", {
            reqheaders: {
                Authorization: `Bearer ${channel_access_token}`,
                "User-Agent": `${pkg.name}/${pkg.version}`,
            },
        })
            .post(u => u.includes("/v2/bot/chat/{chatId}/control/release".replace("{chatId}", "DUMMY")))
            .reply(200, {});
        const res = await client.releaseChatControl(
        // chatId: string
        "DUMMY");
        (0, assert_1.equal)(scope.isDone(), true);
    });
});
